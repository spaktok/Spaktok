version: '3.9'

services:
  frontend:
    build: ./frontend
    ports:
      - "8081:8080" # map host 8081 -> container 8080 to avoid conflicts
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    restart: unless-stopped

  backend:
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - MONGO_URL=mongodb://mongo:27017/spaktok
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=spaktok
      - POSTGRES_PASSWORD=spaktok_password
      - POSTGRES_DB=spaktok_db
      - REDIS_URL=redis://redis:6379
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-sk_test_placeholder}
    volumes:
      - ./backend:/app
    depends_on:
      - mongo
      - postgres
      - redis
    restart: unless-stopped

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=spaktok
      - POSTGRES_PASSWORD=spaktok_password
      - POSTGRES_DB=spaktok_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped

  firebase:
    build:
      context: .
      dockerfile: ./firebase/Dockerfile
    ports:
      - "4000:4000"   # Emulator UI
      - "5001:5001"   # Functions
      - "8080:8080"   # Firestore
      - "9099:9099"   # Auth
      - "9199:9199"   # Storage
    volumes:
      - ./:/workspace
    restart: unless-stopped

volumes:
  mongo-data:
  postgres-data:
  redis-data:
