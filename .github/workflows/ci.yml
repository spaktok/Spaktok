<<<<<<< HEAD
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'

      - name: Get Flutter dependencies
        run: flutter pub get
        working-directory: frontend

      - name: Generate Data Connector Files
        run: dart run build_runner build --delete-conflicting-outputs
        working-directory: frontend

      - name: Analyze Flutter code
        run: flutter analyze
        working-directory: frontend

      - name: Run Flutter tests
        run: flutter test
        working-directory: frontend

      - name: Build Flutter Web
        run: flutter build web --release
        working-directory: frontend

  build_and_test_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install backend dependencies
        run: npm install
        working-directory: backend

      - name: Run backend tests (if any)
        run: echo "No backend tests configured yet."
        working-directory: backend

  docker_build_and_push:
    runs-on: ubuntu-latest
    needs: [build_and_test_frontend, build_and_test_backend]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./spaktok
          push: true
          tags: ${{ secrets.DOCKER_USER }}/spaktok:latest

  firebase_deploy:
    runs-on: ubuntu-latest
    needs: [build_and_test_frontend, build_and_test_backend]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SPAKTOK_E7866 }}'
          projectId: spaktok-e7866
          channelId: live
          target: spaktok

=======
name: Spaktok CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run every hour to check for updates
    - cron: '0 * * * *'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Verify Flutter installation
      run: flutter doctor -v
      
    - name: Check for missing files
      run: |
        echo "Checking for essential files..."
        files=(
          "pubspec.yaml"
          "lib/main.dart"
          "web/index.html"
          "firebase.json"
          "android/app/build.gradle"
          "ios/Runner/Info.plist"
        )
        for file in "${files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "Warning: $file is missing!"
          else
            echo "✓ $file exists"
          fi
        done
        
    - name: Check Firebase configuration
      run: |
        if [ ! -f "lib/firebase_options.dart" ]; then
          echo "Warning: firebase_options.dart is missing!"
          echo "Please run 'flutterfire configure' to generate it."
        else
          echo "✓ Firebase configuration exists"
        fi
        
    - name: Analyze code
      run: flutter analyze
      continue-on-error: true
      
    - name: Run tests
      run: flutter test
      continue-on-error: true
      
    - name: Build Android APK
      run: flutter build apk --release
      continue-on-error: true
      
    - name: Build Web
      run: flutter build web --release
      continue-on-error: true
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: spaktok-builds
        path: |
          build/app/outputs/flutter-apk/
          build/web/
        retention-days: 30
        
  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        
    - name: Check for outdated dependencies
      run: flutter pub outdated
      continue-on-error: true
      
    - name: Update dependencies
      run: flutter pub upgrade
      continue-on-error: true
      
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Run security scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
      continue-on-error: true
      
    - name: Upload scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
      continue-on-error: true
>>>>>>> origin/feature/full-implementation
