name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.5'

      - name: Get Flutter dependencies
        run: flutter pub get
        working-directory: frontend

      - name: Analyze Flutter code
        run: flutter analyze
        working-directory: frontend

      - name: Run Flutter tests
        run: flutter test
        working-directory: frontend

      - name: Build Flutter Web
        run: flutter build web --release
        working-directory: frontend

  build_and_test_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.9.3'

      - name: Install backend dependencies
        run: npm ci
        working-directory: backend

      - name: Lint backend (placeholder)
        run: echo "No backend linters configured yet."
        working-directory: backend

  firebase_deploy:
    runs-on: ubuntu-latest
    needs: [build_and_test_frontend, build_and_test_backend]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SPAKTOK_E7866 }}'
          projectId: spaktok-e7866
          channelId: live
          target: spaktok

  docker_build_and_push:
    runs-on: ubuntu-latest
    needs: [build_and_test_frontend, build_and_test_backend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USER }}/spaktok-backend:latest

      - name: Export runtime env (secrets)
        run: |
          echo "AGORA_APP_ID=${{ secrets.AGORA_APP_ID }}" >> $GITHUB_ENV
          echo "AGORA_APP_CERT=${{ secrets.AGORA_APP_CERT }}" >> $GITHUB_ENV
          echo "AGORA_APP_NAME=${{ secrets.AGORA_APP_NAME }}" >> $GITHUB_ENV
          echo "AGORA_CHAT_APP_KEY=${{ secrets.AGORA_CHAT_APP_KEY }}" >> $GITHUB_ENV
          echo "AGORA_ORG_NAME=${{ secrets.AGORA_ORG_NAME }}" >> $GITHUB_ENV
          echo "AGORA_TEMP_TOKEN=${{ secrets.AGORA_TEMP_TOKEN }}" >> $GITHUB_ENV
          echo "GOOGLE_CLOUD_API_KEY=${{ secrets.GOOGLE_CLOUD_API_KEY }}" >> $GITHUB_ENV
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> $GITHUB_ENV
          echo "STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}" >> $GITHUB_ENV
